## ------- Develop Parameterized Queries -------

# Create a A Simple 1-Hop Query
USE GRAPH social
CREATE QUERY hello(VERTEX<person> p) {
  Start = {p};
  Result = SELECT tgt
           FROM Start:s-(friendship:e) -person:tgt;
  PRINT Result;
}

# Create a More Advanced Query
USE GRAPH social
CREATE QUERY hello2 (VERTEX<person> p) {
  OrAccum  @visited = false;
  AvgAccum @@avgAge;
  Start = {p};

  FirstNeighbors = SELECT tgt
                   FROM Start:s -(friendship:e)- person:tgt
                   ACCUM tgt.@visited += true, s.@visited += true;

  SecondNeighbors = SELECT tgt
                    FROM FirstNeighbors -(:e)- :tgt
                    WHERE tgt.@visited == false
                    POST_ACCUM @@avgAge += tgt.age;

  PRINT SecondNeighbors;
  PRINT @@avgAge;
}

# Install the two stored Queries
INSTALL QUERY hello, hello2

# Run the installed Query with parameter
RUN QUERY hello("Tom")
#You can also use the REST end point to call the stored procedure via a bash shell in docker.
# curl -X GET 'http://localhost:9000/query/social/hello?p=Tom' | jq .


#run the stored procedure with parameter
RUN QUERY hello2("Tom")
#You can also use the REST end point to call the stored procedure via a bash shell in docker.
# curl -X GET 'http://localhost:9000/query/social/hello2?p=Tom' | jq .
